'use strict';

function Sekigae() {
    this.today = this.getToday();
    this.dayNumber = this.getDayNumber();
    this.dailyLogic = this.getYaml('daily_logic.yaml');
    this.yamlName = this.dailyLogic[this.dayNumber];
};

Sekigae.prototype.getToday = function(difference=0) {
    let date = new Date();
    // add difference between server & your local TimeZone
    date.setHours(date.getHours() + difference);

    let year = date.getFullYear();

    // add 1 (this method returns 0 to 11)
    let month = date.getMonth() + 1;
    // fix format
    month = (month < 10 ? '0' : '') + month;

    let day = date.getDate();
    // fix format
    day = (day < 10 ? '0' : '') + day;

    // get Day Name as number
    let weeknum = date.getDay();

    // set Day Name list
    let dayName = ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日']

    return year + '年' + month + '月' + day + '日' + dayName[weeknum]
};

Sekigae.prototype.getDayNumber = function(difference=0) {
    let date = new Date();
    // add difference between server and your local TimeZone
    date.setHours(date.getHours() + difference);

    let weeknum = date.getDay();

    return weeknum;
};

Sekigae.prototype.checkHoliday = function() {
    let dayNumber = this.dayNumber;

    // if Saturday or Sunday, return true
    if (dayNumber == 0 || dayNumber == 6) {
        return true;
    } else {
        return false;
    };
};

Sekigae.prototype.getYaml = function(filename) {
    var yaml = require('js-yaml');
    var fs = require('fs');

    try {
        let doc = yaml.safeLoad(fs.readFileSync(`./${filename}`, 'utf-8'));
        return doc;
    } catch (e) {
        console.log(e);
    };
};

// TODO: refactor this method as Array prototype method...
Sekigae.prototype.getRandomArray = function(max_num) {
    var randomArray = Array(max_num);
    // set number in randomArray
    for (let i = 0; i < max_num; i++) {
        randomArray[i] = i + 1;
    };

    for (let i = max_num -1; i > 0; i--) {
        let j = Math.floor(Math.random() * (i + 1));
        let tmp = randomArray[i];
        randomArray[i] = randomArray[j];
        randomArray[j] =tmp;
    };

    return randomArray;
};

Sekigae.prototype.setMemberDeskHash = function(memberList, randomArray) {
    // set blank hash
    var memberHash = {};

    if (memberList.length > randomArray.length) {
        console.log('Error!! Desks are not enough!!');
    } else {
        for (let i = 0; i < memberList.length; i++) {
            let key = memberList[i];
            memberHash[key] = randomArray[i];
            // TODO: problem is here
            // if key has dot(.),
            // it is displayed with single quote(')
            // ex. 'Xxx.Xxx' ( expected Xxx.Xxx )
        };
        return memberHash;
    };
};

Sekigae.prototype.replaceMemberDeskHash = function(memberDeskHash, member, place) {
    // replace value of member as place
    memberDeskHash[member] = place;

    return memberDeskHash;
};

module.exports = Sekigae;
